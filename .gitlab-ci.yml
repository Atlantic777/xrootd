stages:
  - build:rpm
  - build:dockerimage
  - test
  - publish
  - clean

xrootd_rpm_cc7:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y gcc-c++ rpm-build which git
    - cd packaging/
    - ./makesrpm.sh
    - yum-builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir cc-7/
    - cp packaging/*.src.rpm cc-7
    - cp packaging/RPMS/* cc-7
  artifacts:
    expire_in: 1 day
    paths:
    - cc-7/
  tags:
    - docker-cc7
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_rpm_slc6:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/slc6-base
  script:
    - yum install --nogpg -y gcc-c++ rpm-build which tar git
    - cd packaging/
    - ./makesrpm.sh
    - yum-builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir slc-6
    - cp packaging/*.src.rpm slc-6
    - cp packaging/RPMS/* slc-6
  artifacts:
    expire_in: 1 day
    paths:
    - slc-6/
  tags:
    - docker-slc6
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_rpm_fcrh:
  stage: build:rpm
  image: fedora:rawhide
  script:
    - dnf install --nogpg -y gcc-c++ rpm-build which tar dnf-plugins-core git
    - cd packaging/
    - ./makesrpm.sh
    - dnf builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir fc-rawhide
    - cp packaging/*.src.rpm fc-rawhide
    - cp packaging/RPMS/* fc-rawhide
  artifacts:
    expire_in: 1 day
    paths:
    - fc-rawhide/
  tags:
    - docker-fc_rawhide
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_rpm_fc26:
  stage: build:rpm
  image: fedora:26
  script:
    - dnf install --nogpg -y gcc-c++ rpm-build which tar dnf-plugins-core git
    - cd packaging/
    - ./makesrpm.sh
    - dnf builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir fc-26/
    - cp packaging/*.src.rpm fc-26
    - cp packaging/RPMS/* fc-26
  artifacts:
    expire_in: 1 day
    paths:
    - fc-26/
  tags:
    - docker-fc_rawhide
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_rpm_fc25:
  stage: build:rpm
  image: fedora:25
  script:
    - dnf install --nogpg -y gcc-c++ rpm-build which tar dnf-plugins-core git
    - cd packaging/
    - ./makesrpm.sh
    - dnf builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir fc-25/
    - cp packaging/*.src.rpm fc-25
    - cp packaging/RPMS/* fc-25
  artifacts:
    expire_in: 1 day
    paths:
    - fc-25/
  tags:
    - docker-fc25
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_rpm_fc24:
  stage: build:rpm
  image: fedora:24
  script:
    - dnf install --nogpg -y gcc-c++ rpm-build which tar dnf-plugins-core git
    - cd packaging/
    - ./makesrpm.sh
    - dnf builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir fc-24/
    - cp packaging/*.src.rpm fc-24
    - cp packaging/RPMS/* fc-24
  artifacts:
    expire_in: 1 day
    paths:
    - fc-24/
  tags:
    - docker-fc25
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules
    
xrootd_deb_ubuntu_artful:
  stage: build:rpm
  image: ubuntu:artful
  script:
    - apt-get update
    - apt-get install -y git cmake g++ debhelper devscripts equivs gdebi-core
    - cp -R packaging/debian/ .
    - mk-build-deps --build-dep debian/control
    - gdebi -n xrootd-build-deps-depends*.deb
    - version=`./genversion.sh --print-only`
    - dch --create -v `echo $version | sed 's/^v\(.*\)/\1/'` --package xrootd --urgency low --distribution artful -M "This package is built and released automatically. For important notices and releases subscribe to our maling lists or visit our website."
    - dpkg-buildpackage -b -us -uc -tc --buildinfo-option="-udeb_packages" --changes-option="-udeb_packages"
    - mkdir ubuntu-artful
    - cp deb_packages/*.deb ubuntu-artful
  artifacts:
    expire_in: 1 day
    paths:
    - ubuntu-artful/
  tags:
    - docker-ubuntu
  only:
    - master
    - /^stable-.*$/
    - tags
  except:
    - schedules 

xrootd_tgz_macosx:
  stage: build:rpm
  script:
    - mkdir build
    - mkdir -p tarball/xrootd
    - cd build
    - /usr/local/bin/cmake -D ZLIB_INCLUDE_DIR=/usr/local/Cellar/zlib/1.2.8/include/ -D OPENSSL_INCLUDE_DIR=/usr/local/Cellar/openssl/1.0.2g/include/ -DCMAKE_INSTALL_PREFIX=../tarball/xrootd ..
    - make
    - make install
    - cd ../tarball
    - tar -zcf xrootd.tar.gz xrootd
    - cd ..
    - mkdir osx
    - cp tarball/xrootd.tar.gz osx
  artifacts:
    expire_in: 1 day
    paths:
    - osx/
  tags:
    - macosx-shell
  only:
    - master
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_release_cc7:
  stage: build:rpm
  script:
    - cd packaging/
    - ./makesrpm.sh
    - mock -r epel-7-x86_64 --rebuild xrootd-*.src.rpm --resultdir ./build/
    - cd ..
    - mkdir cc-7
    - cp packaging/*.src.rpm cc-7
    - cp packaging/build/*.rpm cc-7
  artifacts:
    expire_in: 1 day
    paths:
    - cc-7/
  tags:
    - shell-with-docker
  only:
    - web
  except:
    - branches

xrootd_release_slc6:
  stage: build:rpm
  script:
    - cd packaging/
    - ./makesrpm.sh
    - mock -r epel-6-x86_64 --rebuild xrootd-*.src.rpm --resultdir ./build/
    - cd ..
    - mkdir slc-6
    - cp packaging/*.src.rpm slc-6
    - cp packaging/build/*.rpm slc-6
  artifacts:
    expire_in: 1 day
    paths:
    - slc-6/
  tags:
    - coverity
  only:
    - web
  except:
    - branches

xrootd_release_fcrh:
  stage: build:rpm
  script:
    - cd packaging/
    - ./makesrpm.sh
    - mock -r fedora-rawhide-x86_64 --rebuild xrootd-*.src.rpm --resultdir ./build/
    - cd ..
    - mkdir fc-rawhide
    - cp packaging/*.src.rpm fc-rawhide
    - cp packaging/build/*.rpm fc-rawhide
  artifacts:
    expire_in: 1 day
    paths:
    - fc-rawhide/
  tags:
    - coverity
  only:
    - web
  except:
    - branches

xrootd_release_fc24:
  stage: build:rpm
  script:
    - cd packaging/
    - ./makesrpm.sh
    - mock -r fedora-24-x86_64 --rebuild xrootd-*.src.rpm --resultdir ./build/
    - cd ..
    - mkdir fc-24
    - cp packaging/*.src.rpm fc-24
    - cp packaging/build/*.rpm fc-24
  artifacts:
    expire_in: 1 day
    paths:
    - fc-24/
  tags:
    - xrootd-shell
  only:
    - web
  except:
    - branches

xrootd_release_fc23:
  stage: build:rpm
  script:
    - cd packaging/
    - ./makesrpm.sh
    - mock -r fedora-23-x86_64 --rebuild xrootd-*.src.rpm --resultdir ./build/
    - cd ..
    - mkdir fc-23
    - cp packaging/*.src.rpm fc-23
    - cp packaging/build/*.rpm fc-23
  artifacts:
    expire_in: 1 day
    paths:
    - fc-23/
  tags:
    - xrootd-shell
  only:
    - web
  except:
    - branches

xrootd_biweekly_cc7:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y gcc-c++ rpm-build which git cppunit-devel
    - xrootd_version=$(git tag | grep '^v' | grep -v 'rc.*$' | grep -v 'CERN$' | sed -e '$!d')
    - xrootd_version=${xrootd_version:1}
    - short_hash=$(git rev-parse --verify HEAD | awk '{print substr($0, 0, 8)}')
    - a=( ${xrootd_version//./ } )
    - ((a[2]++))
    - experimental_version="${a[0]}.${a[1]}.${a[2]}-0.experimental."${CI_PIPELINE_ID}.$short_hash
    - cd packaging/
    - ./makesrpm.sh --version $experimental_version
    - yum-builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_with_tests 1" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir epel-7/
    - cp packaging/*.src.rpm epel-7
    - cp packaging/RPMS/* epel-7
  artifacts:
    expire_in: 1 day
    paths:
    - epel-7/
  tags:
    - docker-cc7
  only:
    - schedules

xrootd_biweekly_slc6:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/slc6-base
  script:
    - yum install --nogpg -y gcc-c++ rpm-build which tar git cppunit-devel
    - xrootd_version=$(git tag | grep '^v' | grep -v 'rc.*$' | grep -v 'CERN$' | sed -e '$!d')
    - xrootd_version=${xrootd_version:1}
    - short_hash=$(git rev-parse --verify HEAD | awk '{print substr($0, 0, 8)}')
    - a=( ${xrootd_version//./ } )
    - ((a[2]++))
    - experimental_version="${a[0]}.${a[1]}.${a[2]}-0.experimental."${CI_PIPELINE_ID}.$short_hash
    - cd packaging/
    - ./makesrpm.sh --version $experimental_version
    - yum-builddep --nogpgcheck -y *.src.rpm
    - mkdir RPMS
    - rpmbuild --rebuild --define "_rpmdir RPMS/" --define "_with_tests 1" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" *.src.rpm
    - cd ..
    - mkdir epel-6/
    - cp packaging/*.src.rpm epel-6
    - cp packaging/RPMS/* epel-6
  artifacts:
    expire_in: 1 day
    paths:
    - epel-6/
  tags:
    - docker-slc6
  only:
    - schedules

xrootd_publish_artifacts_master:
  stage: publish
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y sssd-client sudo createrepo
    - prefix=/eos/project/s/storage-ci/www/xrootd
    - "for platform in cc-7 slc-6 fc-rawhide fc-26 fc-25 fc-24; do 
         path=$prefix/${CI_COMMIT_REF_NAME}/$platform/x86_64/latest/;
         sudo -u stci -H mkdir -p $path;
         sudo -u stci -H find ${path} -type f -name '*.rpm' -delete;
         sudo -u stci -H cp $platform/* $path;
         sudo -u stci -H createrepo --update -q $path;
      done"
  tags:
    - docker-slc6
  only:
    - master
  except:
    - schedules

xrootd_publish_artifacts_stable:
  stage: publish
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y sssd-client sudo createrepo
    - prefix=/eos/project/s/storage-ci/www/xrootd
    - "for platform in cc-7 slc-6 fc-rawhide fc-26 fc-25 fc-24; do 
         path=$prefix/${CI_COMMIT_REF_NAME}/$platform/x86_64/;
         sudo -u stci -H mkdir -p $path;
         sudo -u stci -H cp $platform/* $path;
         sudo -u stci -H createrepo --update -q $path;
      done"
  tags:
    - docker-slc6
  only:
    - /^stable-.*$/
  except:
    - tags
    - schedules

xrootd_publish_artifacts_release:
  stage: publish
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y sssd-client sudo createrepo
    - prefix=/eos/project/s/storage-ci/www/xrootd
    - tar -zcf xrootd-${CI_COMMIT_TAG}.tar.gz .
    - "for platform in cc-7 slc-6 fc-rawhide fc-24 fc-23; do 
         path=$prefix/release/$platform/x86_64/v$CI_COMMIT_TAG/;
         sudo -u stci -H mkdir -p $path;
         sudo -u stci -H cp $platform/*.rpm $path;
         sudo -u stci -H find ${path} -type f -name '*.src.rpm' -delete;
         sudo -u stci -H cp $platform/*.src.rpm $path/source;
         sudo -u stci -H cp xrootd-*.tar.gz $path/tarball;
         sudo -u stci -H createrepo --update -q $path;
      done"
  tags:
    - docker-slc6
  only:
    - web
  except:
    - branches

xrootd_publish_artifacts_biweekly:
  stage: publish
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y sssd-client sudo createrepo
    - prefix=/eos/project/s/storage-ci/www/xrootd
    - "for platform in epel-7 epel-6; do 
         path=$prefix/experimental/$platform/x86_64/;
         sudo -u stci -H mkdir -p $path;
         sudo -u stci -H cp $platform/* $path;
         sudo -u stci -H createrepo --update -q $path;
      done"
  tags:
    - docker-slc6
  dependencies:
    - xrootd_biweekly_cc7
    - xrootd_biweekly_slc6
  only:
    - schedules

xrootd_clean_artifacts:
  stage: clean
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y sssd-client sudo createrepo
    - sudo -u stci -H bash -c 'for commit_dir in /eos/project/s/storage-ci/www/xrootd/stable-*/*/*/; do find ${commit_dir} -type f -name '"'"'*.rpm'"'"' -mtime +30 -delete; createrepo --update -q ${commit_dir}; done'
    - sudo -u stci -H bash -c 'for commit_dir in /eos/project/s/storage-ci/www/xrootd/experimental/*/x86_64/; do find ${commit_dir} -type f -name '"'"'*.rpm'"'"' -mtime +30 -delete; createrepo --update -q ${commit_dir}; done'
  tags:
    - docker-slc6
  allow_failure: true
  only:
    - schedules
